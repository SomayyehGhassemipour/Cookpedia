@use 'variables' as *;
@use 'functions' as *;

@mixin set-background($color){
  background-color: $color;
  color:set-text-color($color);
}


// ========== //
// Font sizes //
// ========== //
@mixin font-sizes($h1, $h2, $h3, $h4, $p) {
  $font-sizes: (
      "h1": $h1,
      "h2": $h2,
      "h3": $h3,
      "h4": $h4,
      "p": $p,
  );
  @each $tag, $size in $font-sizes {
      @if $tag== "p" {
          #{$tag},
          span,
          strong,
          label,
          a,
          li {
              font-size: $size;
          }
      } @else {
          #{$tag} {
              font-size: $size;
          }
      }
  }
}

// ============= //
//      Flex     //
// ============= //

@mixin flx($direction: column,$align: center, $justify: space-between, $gapR:var(--gap), $gapC:var(--spacer)) {
  display: flex;
  gap: $gapR $gapC;
  flex-direction:$direction;
  align-items: $align;
  justify-content: $justify;
}  

// ============= //
// Media Queries //
// ============= //

@mixin mq($key) {
  $size: map-get($breakpoints, $key);
  
  @media only screen and (max-width: $size) {
    @content
  }
}




